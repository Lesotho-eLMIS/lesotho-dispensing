#%RAML 0.8
---
title: OpenLMIS Dispensing
version: "@version@"
baseUri: "@baseUrl@"
protocols: [ HTTP, HTTPS ]

documentation:
  - title: Getting Started
    content: |
      OpenLMIS Dispensing. Dispensing implements CRUD operations for OpenLMIS Dispensing functionalities.
      
      This service provides the following functionality:
      * Create a Prescription - capture
      * Get a list of Prescriptions for a given facility (destination)
      * Get a Prescription given an id.
      * Edit/update a Prescription
      * Void (soft delete) a Prescription
      * Create a Patient
      * Get a list of Patients for a given facility (destination)
      * Get a Patient given an id.
      * Edit/update a Patient
      * Void (soft delete) a Patient

schemas:
  - patientDto: !include schemas/patientDto.json
  - personDto: !include schemas/personDto.json
  - medicalHistoryDto: !include schemas/medicalHistoryDto.json
  - prescriptionDto: !include schemas/prescriptionDto.json
  - pointOfDeliveryEventDto: !include schemas/pointOfDeliveryEventDto.json
  - pointOfDeliveryEventDtos: |
      {
          "type": "array",
          "items": {"type": "object", "$ref": "schemas/pointOfDeliveryEventDto.json"}
      }
  - patientDtos: |
      {
          "type": "array",
          "items": {"type": "object", "$ref": "schemas/patientDto.json"}
      }
  - prescriptionDtos: |
      {
          "type": "array",
          "items": {"type": "object", "$ref": "schemas/prescriptionDto.json"}
      }

  - validSourceDestination: !include schemas/validSourceDestination.json
  - validSourceDestinations: |
      {
          "type": "array",
          "items": {"type": "object", "$ref": "schemas/validSourceDestination.json"}
      }
  - validReasonAssignment: !include schemas/validReasonAssignment.json
  - validReasonAssignments: |
      {
          "type": "array",
          "items": {"type": "object", "$ref": "schemas/validReasonAssignment.json"}
      }
  - organization: !include schemas/organization.json
  - organizations: |
      {
          "type": "array",
          "items": {"type": "object", "$ref": "schemas/organization.json"}
      }
  - localizedMessage: !include schemas/localizedMessage.json
  - uuid: |
      {
        "type": "string",
        "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$"
      }
  - arrayOfStrings: |
      {
        "type": "array",
        "items": {
          "type": "string"
        }
      }

resourceTypes:
  - collection:
      get:
        responses:
          200:
            description: Collection retrieved successfully
            headers:
              X-Content-Type-Options:
              X-XSS-Protection:
            body:
              application/json:
                schema: <<schema>>
          404:
            description: Collection is empty.
            headers:
              X-Content-Type-Options:
              X-XSS-Protection:
      post:
        body:
          application/json:
            schema: <<schema>>
        responses:
          201:
            description: Item created successfully
            headers:
              X-Content-Type-Options:
              X-XSS-Protection:
            body:
              application/json:
                schema: <<schema>>
  - member:
      get:
        responses:
          200:
            body:
              application/json:
                schema: <<schema>>
      post:
        body:
          application/json:
            schema: <<schema>>
        responses:
          200:
            body:
              application/json:
                schema: <<schema>>
      delete:
        responses:
          200:

traits:
  - secured:
      queryParameters:
        access_token:
          displayName: access_token
          description: OAuth2 access token
          type: string
          required: false
          repeat: false
      headers:
        Authorization:
          displayName: Authorization
          description: OAuth2 authorization token header. Takes the form of 'Bearer <token>'.
          type: string
          required: false
          repeat: false



  - paginated:
      queryParameters:
        page:
          description: The page number which should be displayed. Note that the first page is numbered zero rather than one. Additionally, negative and undefined values are interpreted as zero.
          type: integer
          required: false
          repeat: false
        size:
          description: The desired size of each page. This specifies the maximum number of values that should be returned by the server. Zero, undefined, and negative values should result in all possible values being returned.
          type: integer
          required: false
          repeat: false
  - sorted:
      queryParameters:
        sort:
          description: Sorting criteria in the format "property(,asc|desc)". Default sort order is ascending. Multiple sort criteria are supported.
          type: string
          required: false
          repeat: true

/api:
  /patient:
    get:
      is: [ secured ]
      description: Get a list of patients for a given facility
      queryParameters:
        facilityId:
          required: true

      responses:
        200:
          description: |
            Returns a default templte with all fields set to not display when no query parameters are passed.
            
            Returns template that matches destination id.
          headers:
            X-Content-Type-Options:
            X-XSS-Protection:
          body:
            application/json:
              schema: patientDtos
        404:
          description: Point of delivery events not found for the given query parameter.
          body:
            application/json:
              schema: localizedMessage
        400:
          body:
            application/json:
              schema: localizedMessage
          description: Provided query parameters are not correctly formatted.

    post:
      is: [ secured ]
      description: Create a new patient
      body:
        application/json:
          schema: patientDto

      responses:
        201:
          description: Patient creation has been processed with no validation error or persistence error.
          headers:
            Keep-Alive:
          body:
            application/json:
              schema: uuid

        400:
          description: Failed to process of patient creation due to validation error.
          body:
            application/json:
              schema: localizedMessage

        403:
          description: User does not have permission to create patients for given facility.
          body:
            application/json:
              schema: localizedMessage
              
    /{id}/void:
      uriParameters:
        id:
          displayName: id
          type: string
          required: true
          repeat: false
      post:
        is: [ secured ]
        description: Void a patient.
        body:
          application/json:
            schema: patientDto

        responses:
          200:
            description: Patient voided.
            headers:
              Keep-Alive:
            body:
              application/json:
                schema: patientDto
          400:
            body:
              application/json:
                schema: localizedMessage
            description: An error occured during request processing.

          403:
            description: User does not have permission to void a patient.
            body:
              application/json:
                schema: localizedMessage
          
    /{id}:
      uriParameters:
        id:
          displayName: id
          type: string
          required: true
          repeat: false
      put:
        is: [ secured ]
        description: Update patient.
        body:
          application/json:
            schema: patientDto

        responses:
          200:
            description: Patient updated.
            headers:
              Keep-Alive:
            body:
              application/json:
                schema: patientDto
          400:
            body:
              application/json:
                schema: localizedMessage
            description: An error occured during request processing.

          403:
            description: User does not have permission to save a point of delivery event.
            body:
              application/json:
                schema: localizedMessage
      delete:
        is: [ secured ]
        description: Void (soft delete) a Patient.

        responses:
          204:
            description: Patient deleted.
          400:
            description: Patient is not found.
            body:
              application/json:
                schema: localizedMessage
          403:
            description: User does not have permission to delete a Patient.
            body:
              application/json:
                schema: localizedMessage

  /prescription:
    /{id}:
      delete:
        is: [ secured ]
        description: Void (soft delete) a Prescription.

        responses:
          204:
            description: Prescription deleted.
          400:
            description: Prescription event is not found.
            body:
              application/json:
                schema: localizedMessage
          403:
            description: User does not have permission to delete a Prescription.
            body:
              application/json:
                schema: localizedMessage

      get:
        is: [ secured ]
        description: Get a list of prescriptions given a facility
        queryParameters:
          facilityId:
            required: true

        responses:
          200:
            description: |
              Returns a default template with all fields set to not display when no query parameters are passed.

              Returns template that matches facility id.
            headers:
              X-Content-Type-Options:
              X-XSS-Protection:
            body:
              application/json:
                schema: prescriptionDtos
          404:
            description: Prescriptions not found for the given query parameter.
            body:
              application/json:
                schema: localizedMessage
          400:
            body:
              application/json:
                schema: localizedMessage
            description: Provided query parameters are not correctly formatted.

    post:
      is: [ secured ]
      description: Create a new Prescription (prescription capture).
      body:
        application/json:
          schema: prescriptionDto

      responses:
        201:
          description: Prescription creation has been processed with no validation error or persistence error.
          headers:
            Keep-Alive:
          body:
            application/json:
              schema: uuid

        400:
          description: Failed to process prescription due to validation error.
          body:
            application/json:
              schema: localizedMessage

        403:
          description: User does not have permission to create prescription for given facility.
          body:
            application/json:
              schema: localizedMessage
    
    /{id}/void:
      uriParameters:
        id:
          displayName: id
          type: string
          required: true
          repeat: false
      post:
        is: [ secured ]
        description: Void a prescription.
        body:
          application/json:
            schema: prescriptionDto

        responses:
          200:
            description: Prescription updated.
            headers:
              Keep-Alive:
            body:
              application/json:
                schema: prescriptionDto
          400:
            body:
              application/json:
                schema: localizedMessage
            description: An error occured during request processing.

          403:
            description: User does not have permission to save a prescription.
            body:
              application/json:
                schema: localizedMessage

    /{id}/serve:
      uriParameters:
        id:
          displayName: id
          type: string
          required: true
          repeat: false
      post:
        is: [ secured ]
        description: Serve a prescription.
        body:
          application/json:
            schema: pointOfDeliveryEventDto

        responses:
          200:
            description: Prescription served.
            headers:
              Keep-Alive:
            body:
              application/json:
                schema: pointOfDeliveryEventDto
          400:
            body:
              application/json:
                schema: localizedMessage
            description: An error occured during request processing.

          403:
            description: User does not have permission to serve a prescription.
            body:
              application/json:
                schema: localizedMessage  
